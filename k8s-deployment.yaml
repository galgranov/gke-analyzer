apiVersion: apps/v1
kind: Deployment
metadata:
  name: gke-analyzer
  labels:
    app: gke-analyzer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gke-analyzer
  template:
    metadata:
      labels:
        app: gke-analyzer
    spec:
      containers:
      - name: gke-analyzer
        image: gke-analyzer:latest
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: uri
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: gke-analyzer-service
spec:
  selector:
    app: gke-analyzer
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gke-analyzer-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: gke-analyzer.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gke-analyzer-service
            port:
              number: 80
